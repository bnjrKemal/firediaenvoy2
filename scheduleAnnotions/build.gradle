plugins {
    id 'java'
}

group = 'com'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    //springframework
    maven {
        url = uri("https://plugins.gradle.org/m2/")
    }
    maven { //PlaceHolderAPI
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven { //ASkyBlock
        url = 'https://repo.codemc.org/repository/maven-public'
    }
    maven { //SuperiorSkyblock2
        url 'https://repo.bg-software.com/repository/api/'
    }
    maven { //FabledSkyblock
        url 'https://repo.songoda.com/repository/public/'
    }
    maven { //IridiumSkyblock
        url 'https://nexus.iridiumdevelopment.net/repository/maven-releases/'
    }
    maven { //Bentobox
        url 'https://repo.codemc.org/repository/maven-public/'
    }
}

dependencies {
    implementation 'org.testng:testng:7.1.0'
    compileOnly "io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT"
    compileOnly 'me.clip:placeholderapi:2.11.2' //PlaceHolderAPI
    compileOnly 'com.wasteofplastic:askyblock:3.0.9.4' //ASkyBlock
    compileOnly 'com.bgsoftware:SuperiorSkyblockAPI:2022.9' //SuperiorSkyblock2
    implementation 'com.songoda:skyblock:2.3.30' //FabledSkyblock
    compileOnly 'com.iridium:IridiumSkyblock:4.0.6' //IridiumSkyblock
    compileOnly 'world.bentobox:bentobox:1.16.2-SNAPSHOT' //Bentobox
}


def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
